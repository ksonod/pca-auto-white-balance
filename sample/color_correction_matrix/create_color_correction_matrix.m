%{
This script is to create a color correction matrix (CCM). 
As a reference, see:
 https://www.mathworks.com/help/images/correct-colors-using-color-correction-matrix.html
%}

close all;

%% USER SETTING
addpath(strcat(pwd, '/sample/color_correction_matrix'));
save_ccm = false;

% This input image can be generated by disabling all the processing in the 
% config of the main.py (no_processing = True).
input_file_path = 'data/sample_image/processed_rgb.png';

%% Detect Macbeth chart and evaluate colors.
p = genpath(pwd);  % pwd should return the root of this repo.
addpath(p);
img = imread(input_file_path);

imshow(img);
disp('Select four courners...');
blackPoint = drawpoint;
whitePoint = drawpoint;
darkSkinPoint = drawpoint;
bluishGreenPoint = drawpoint;

cornerPoints = [blackPoint.Position;
    whitePoint.Position;
    darkSkinPoint.Position;
    bluishGreenPoint.Position];

disp('Done.');
chart = colorChecker(img, "RegistrationPoints", cornerPoints);

%% Assess results and construct CCM
[colorTable, ccm] = measureColor(chart);
disp('-- Results --');
disp(colorTable)
disp('-- CCM --');
disp(ccm)
displayChart(chart);

new_img = imapplymatrix(ccm(1:3,:)',img,ccm(4,:));

if save_ccm
    save_file_path = strcat(pwd, '/sample/color_correction_matrix/ccm.mat');
    save(save_file_path, 'ccm');
    disp('ccm.mat is saved')
end